// REFERENCE: ConvertColor.dll
// REFERENCE: FGT.dll
// PLATFORM: x86

using ConvertColor;
using FGT;
using Nemerle.Collections;
using System.Collections.Generic;
using System.Console;
using System.Diagnostics;
using System.IO;
using System.Math;
using System;

def Load(path, domain, maxEntries)
{
	using (txt = File.OpenText(path))
	{
		WriteLine("Reading data...");
		def watch = Stopwatch.StartNew();

		// skip header
		def header = txt.ReadLine();
		Trace.Assert(header == "index\trank\thex\tvotes\tcomments\thearts", "header");

		mutable (min, max) = (int.MaxValue, int.MinValue);

		def entries = List();
		for (mutable line = txt.ReadLine(); line != null && entries.Count < maxEntries; line = txt.ReadLine())
		{
			def parts = line.Split(array['\t']);
			def color = Drawing.Color.FromArgb(int.Parse(parts[2], Globalization.NumberStyles.HexNumber));
			def votes = int.Parse(parts[3]);

			def p = color |> ColorToRgb |> RgbToXyz |> XyzToLab;
			Trace.Assert(p[0] >= domain.x[0] && p[0] <= domain.x[1]);
			Trace.Assert(p[1] >= domain.y[0] && p[1] <= domain.y[1]);
			Trace.Assert(p[2] >= domain.z[0] && p[2] <= domain.z[1]);
			when (votes < min) min = votes;
			when (votes > max) max = votes;
			entries.Add(Value3D(p, votes :> double));
		}
		WriteLine("Loaded {0:N0} entries {1:N0}-{2:N0} in {3} seconds", entries.Count, min, max, watch.Elapsed.TotalSeconds);
		entries.ToArray();
	}
}

def Save(path, a)
{
	def mem = sizeof(double) * a.n[0] * a.n[1] * a.n[2] * a.pd;
	WriteLine("Saving {0}x{1}x{2}x{3} ({4:N0} bytes)...", a.n[0], a.n[1], a.n[2], a.pd, mem);

	using (w = BinaryWriter(File.Create(path)))
	{
		w.Write(a.σ    :> float);
		w.Write(a.α    : int);
		w.Write(a.pd   : int);
		w.Write(a.side :> float);
		w.Write(a.domain.x[0] :> float);
		w.Write(a.domain.y[0] :> float);
		w.Write(a.domain.z[0] :> float);
		w.Write(a.domain.x[1] :> float);
		w.Write(a.domain.y[1] :> float);
		w.Write(a.domain.z[1] :> float);
		w.Write(a.coef.Length : int);
		for (mutable i; i != a.coef.Length; ++i)
			w.Write(a.coef[i] :> float);
	}

	WriteLine("'{0}'", path);
}

def domain = Domain3D
	( (   0.0, 100.0)
	, ( -87.0,  99.0)
	, (-108.0,  96.0)
	);

def iPath = @"..\get colors\data.txt";
def oPath = "coef.dat";
def count = 10_000_000;
def σ     = 5.0;
def α     = 5;

Save(oPath, Preprocess(Load(iPath, domain, count), σ, α, domain));
